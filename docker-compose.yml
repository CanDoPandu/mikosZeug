version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nestjs-postgres
    environment:
      POSTGRES_DB: nestjs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  nestjs-backend:
    image: ghcr.io/candopandu/mikoszeug:latest
    container_name: nestjs-backend
    environment:
      NODE_ENV: production
      # Railway-style environment variables
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: password123
      PGDATABASE: nestjs_db
      # Fallback to old-style for compatibility
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password123
      DB_DATABASE: nestjs_db
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: nestjs-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge